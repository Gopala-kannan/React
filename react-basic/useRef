// useRef is a react hook that allow us to create mutable variables which will not re-render the component
// useRef is also used for accessing Dom elements. it means we can access the DOM elements using the useRef hook and we can modify the DOM elements.

// const count = useRef(0);

port React, { useEffect, useRef, useState } from 'react'
import './App.css'

function App() {

  const [value, setValue] = useState(0)
  const count = useRef(0);

  useEffect(() =>{
    count.current = count.current +1;
  });

  return (
    <>
     <button onClick={() => {setValue(prev => prev-1)}}>-1</button>
     <h1>{value}</h1>
     <button onClick={() => {setValue(prev => prev+1)}}>+1</button>
     <h1>Render Count: {count.current}</h1>
    </>
  )
}

export default App;


//another example

import React, { useEffect, useRef, useState } from 'react'
import './App.css'

function App() {

  const inputElement = useRef();

  const btnClicked = ()=>{
    inputElement.current.style.background = "blue"
  }

  return (
    <>
      <input type="text" ref={inputElement} />
      <button onClick={btnClicked}>Cilck Here</button>
    </>
  )
}

export default App;
